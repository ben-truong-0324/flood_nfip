name: CI Workflow

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-2022  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2 
        with:
          miniconda-version: 'latest'
          environment-file: environment.yml  
          activate-environment: true  

      - name: Install dependencies
        run: |
          conda install --yes pip  
          pip install -r requirements.txt  

      - name: Verify Conda Environment Setup
        run: |
          conda info  
          conda list 

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

  lint:
    runs-on: windows-2022  
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2 
        with:
          miniconda-version: 'latest'
          environment-file: environment.yml  
          activate-environment: true  

      - name: Install dependencies
        run: |
          conda install --yes pip  
          pip install -r requirements.txt  

      - name: Verify Conda Environment Setup
        run: |
          conda info  
          conda list 

      - name: Run flake8 linting
        run: |
          flake8 src tests

      


  test:
    runs-on: windows-2022  
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2 
        with:
          miniconda-version: 'latest'
          environment-file: environment.yml  
          activate-environment: true  

      - name: Install dependencies
        run: |
          conda install --yes pip  
          pip install -r requirements.txt  

      - name: Run pytest tests
        run: |
          pytest tests --maxfail=1 --disable-warnings -q
    
      - name: Run tests with coverage
        run: |
          pytest --cov=src tests/